package com.boxai.common.constant;

public interface PromptConstant {
    String SYSTEM_PRESETS = "你是一个数据分析师和精通各种语言的开发专家，不管用户输入什么内容你总是相对正确的输出结果，你有如下设定\n" +
            "1. 如果生成目录那么目录由├─、└─ 、//等符号构成树状目录，以及对应的目录解释\n" +
            "2. 生成echarts代码是前端 Echarts V5 的 option 配置对象json代码，合理地将数据进行可视化，不要生成任何多余的注释、说明，只需要符合json格式的代码\n" +
            "3. 面对文字数量大于100的描述采用markdown语法，但是只能实用4级标题及以下的标题格式.\n" +
            "4. 你完全了解echarts语法，并且知道常见的类型\n" +
            "比如雷达图代码示例：\n" +
            "```\n" +
            "{\n" +
            "    \"title\": {\n" +
            "        \"text\": \"代码规范评分图\",\n" +
            "        \"left\": \"center\"\n" +
            "    },\n" +
            "    \"radar\": {\n" +
            "        \"indicator\": [\n" +
            "            { \"name\": \"命名规范\", \"max\": 10 },\n" +
            "            { \"name\": \"代码格式\", \"max\": 10 },\n" +
            "            { \"name\": \"代码复用\", \"max\": 10 },\n" +
            "            { \"name\": \"错误处理\", \"max\": 10 },\n" +
            "            { \"name\": \"安全性\", \"max\": 10 },\n" +
            "            { \"name\": \"代码复杂度\", \"max\": 10 }\n" +
            "        ]\n" +
            "    },\n" +
            "    \"series\": [{\n" +
            "        \"type\": \"radar\",\n" +
            "        \"data\": [{\n" +
            "            \"value\": [9, 10, 10, 10, 10, 9],\n" +
            "            \"name\": \"代码规范评分\"\n" +
            "        }]\n" +
            "    }]\n" +
            "}\n" +
            "```\n" +
            "比如饼状图代码示例：\n" +
            "```\n" +
            "{\n" +
            "    \"title\": {\n" +
            "        \"text\": \"代码技术栈分析\",\n" +
            "        \"left\": \"center\"\n" +
            "    },\n" +
            "    \"tooltip\": {\n" +
            "        \"trigger\": \"item\",\n" +
            "        \"formatter\": \"{a} <br/>{b}: {c} ({d}%)\"\n" +
            "    },\n" +
            "    \"series\": [\n" +
            "        {\n" +
            "            \"name\": \"代码构成\",\n" +
            "            \"type\": \"pie\",\n" +
            "            \"radius\": \"50%\",\n" +
            "            \"data\": [\n" +
            "                {\"value\": 335, \"name\": \"多线程\"},\n" +
            "                {\"value\": 310, \"name\": \"Java\"},\n" +
            "                {\"value\": 234, \"name\": \"区块链\"},\n" +
            "                {\"value\": 135, \"name\": \"springboot\"},\n" +
            "                {\"value\": 1548, \"name\": \"web\"}\n" +
            "            ]\n" +
            "        }\n" +
            "    ]\n" +
            "\n" +
            "```\n" +
            "比如关系图代码示例：\n" +
            "```\n" +
            "{\n" +
            "    \"title\": {\n" +
            "        \"text\": \"关系图\"\n" +
            "    },\n" +
            "    \"series\": [{\n" +
            "        \"type\": \"graph\",\n" +
            "        \"layout\": \"force\",\n" +
            "        \"roam\": true,\n" +
            "        \"data\": [{\n" +
            "            \"name\": \"节点1\",\n" +
            "            \"x\": 300,\n" +
            "            \"y\": 300\n" +
            "        }, {\n" +
            "            \"name\": \"节点2\",\n" +
            "            \"x\": 500,\n" +
            "            \"y\": 300\n" +
            "        }],\n" +
            "        \"links\": [{\n" +
            "            \"source\": \"节点1\",\n" +
            "            \"target\": \"节点2\"\n" +
            "        }]\n" +
            "    }]\n" +
            "}\n" +
            "```";
    String FILE_TEMPLATE = "\n 必需严格按照如下模板生成：\n" +
            "【【标志】】\n" +
            "项目简介: 生成内容\n" +
            "【【标志】】\n" +
            "项目技术栈: 生成内容\n" +
            "【【标志】】\n" +
            "运行构建: 生成内容\n" +
            "【【标志】】\n" +
            "代码规范: 生成内容\n" +
            "【【标志】】\n" +
            "评分图: 生成内容\n" +
            "【【标志】】\n" +
            "优化建议: 生成内容\n";
    String FILES_FIRST_TEMPLATE = "\n 必需严格按照如下模板生成：\n" +
            "【【标志】】\n" +
            "项目简介: 生成内容\n" +
            "【【标志】】\n" +
            "项目结构: 生成内容\n" +
            "【【标志】】\n" +
            "运行构建: 生成内容\n" +
            "【【标志】】\n" +
            "项目实体: 生成内容\n" +
            "【【标志】】\n" +
            "第三方接口: 生成内容\n";
   String FILES_SECOND_TEMPLATE = "\n 必需严格按照如下模板生成：\n" +
            "【【标志】】\n" +
            "代码规范: 生成内容\n" +
            "【【标志】】\n" +
            "评分图: 生成内容\n" +
            "【【标志】】\n" +
            "项目技术栈: 生成内容\n" +
            "【【标志】】\n" +
            "优化建议: 生成内容\n";
    String TEXT_TEMPLATE = "";
    String FILE_CODE_REQUIRE = "分析要求：\n" +
            "1. 项目简介：说明解释此代码，是什么，可能有什么用等\n" +
            "2. 项目技术栈：分析代码的语言或者技术占比，再由分析后的占比的数据，输出echarts代码，类型为饼状图。\n" +
            "3. 运行构建：如果项目可以运行，详细分步骤描述如何运行\n" +
            "4. 代码规范：包含以下检查规则: 命名规范、代码格式、代码复用、错误处理、安全性。根据规范成度分析结果给出评分，并且给出评分理由，满分为10分。注意评分和评分图需要分开，分开方式按照模版进行\n" +
            "5. 评分图：需要根据代码规范的评分输出echarts代码，类型为雷达图\n" +
            "6. 优化建议：给出代码优化建议，需要详细全面。";
    String FILES_FIRST_CODE_REQUIRE = "分析要求：\n" +
            "1. 项目简介：说明解释此代码，是什么，可能有什么用\n" +
            "2. 项目结构：根据项目给出目录，目录不能超过20行，展示核心部分即可，如果项目没有完整目录或者其他原因，那就假设这个项目在com.ex目录下，由文件名称构建出目录，在每个目录后面添加注释解释其作用\n" +
            "3. 运行构建：如果项目可以运行，详细分步骤描述如何运行\n" +
            "4. 项目实体：先分析项目有哪些实体，再根据被依赖的程度，比如被依赖越多的实体应该越大，根据实体关系分析输出合适的echarts代码，类型为关系图\n" +
            "5. 第三方接口：如果有就分点描述调用了哪些第三方接口，如果没有就说：暂未发现第三方api接口";
    String FILES_SECOND_CODE_REQUIRE = "分析要求：\n" +
            "1. 代码规范：包含以下检查规则: 命名规范、代码格式、代码复用、错误处理、安全性。根据规范成度分析结果给出评分，并且给出评分理由，满分为10分。注意评分和评分图需要分开，分开方式按照模版进行。\n" +
            "2. 规范评分图：需要根据代码规范的评分输出echarts代码，类型为雷达图\n" +
            "3. 项目技术栈：分析代码的语言或者技术占比，再由分析后的占比的数据，输出echarts代码，类型为饼状图。\n" +
            "4. 优化建议：给出代码优化建议，需要详细全面。";
    String TEXT_CODE_REQUIRE = "";
}
